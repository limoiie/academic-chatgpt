[package]
name = "app"
version = "0.1.0"
description = "App academic-chatgpt"
authors = ["limo.iie4@gmail.com"]
license = ""
repository = "https://www.github.com/limoiie/academic-chatgpt"
default-run = "app"
edition = "2021"
rust-version = "1.65"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.2.1", features = [] }

[[bin]]
name = "app"
path = "src/main.rs"

[[bin]]
name = "specta"
path = "src/bin/specta.rs"

[dependencies]
anyhow = "1.0.69"
dotenv = "0.15.0"
log = "0.4.17"
md5 = "0.7.0"
prisma-client-rust = { git = "https://github.com/Brendonovich/prisma-client-rust", tag = "0.6.7", default-features = false, features = ["sqlite", "migrations", "specta", "mocking"] }
serde_json = "1.0"
serde-error = "0.1.2"
serde = { version = "1.0", features = ["derive"] }
specta = "1.0.0"
tauri = { version = "1.2.4", features = ["dialog-open", "fs-exists", "fs-read-file", "fs-write-file", "global-shortcut-all", "http-all", "os-all", "path-all", "process-exit", "process-relaunch", "shell-open", "window-all"] }
tauri-specta = { version = "1.0.0", features = ["typescript"] }
tauri-plugin-store = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "dev" }
tiny_http = { version = "0.12.0", optional = true }
tokio = { version = "1.25.0", features = ["full"] }

[features]
# by default Tauri runs in production mode
# when `tauri dev` runs it is executed with `cargo run --no-default-features` if `devPath` is an URL
default = ["custom-protocol"]
# this feature is used for production builds where `devPath` points to the filesystem
# DO NOT remove this
custom-protocol = ["tauri/custom-protocol"]
http-invoke = ["tiny_http/default"]
